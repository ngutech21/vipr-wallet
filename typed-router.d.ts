/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    'not-found': RouteRecordInfo<'not-found', '/catch-all', Record<never, never>, Record<never, never>>,
    '/ErrorNotFound': RouteRecordInfo<'/ErrorNotFound', '/ErrorNotFound', Record<never, never>, Record<never, never>>,
    '/federation/[id]': RouteRecordInfo<'/federation/[id]', '/federation/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/federations/': RouteRecordInfo<'/federations/', '/federations', Record<never, never>, Record<never, never>>,
    '/receive': RouteRecordInfo<'/receive', '/receive', Record<never, never>, Record<never, never>>,
    '/receive-ecash': RouteRecordInfo<'/receive-ecash', '/receive-ecash', Record<never, never>, Record<never, never>>,
    '/received-lightning': RouteRecordInfo<'/received-lightning', '/received-lightning', Record<never, never>, Record<never, never>>,
    '/scan': RouteRecordInfo<'/scan', '/scan', Record<never, never>, Record<never, never>>,
    '/send': RouteRecordInfo<'/send', '/send', Record<never, never>, Record<never, never>>,
    '/sent-lightning': RouteRecordInfo<'/sent-lightning', '/sent-lightning', Record<never, never>, Record<never, never>>,
    '/settings/': RouteRecordInfo<'/settings/', '/settings', Record<never, never>, Record<never, never>>,
    '/transaction/[id]': RouteRecordInfo<'/transaction/[id]', '/transaction/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/catch-all.vue': {
      routes: 'not-found'
      views: never
    }
    'src/pages/ErrorNotFound.vue': {
      routes: '/ErrorNotFound'
      views: never
    }
    'src/pages/federation/[id].vue': {
      routes: '/federation/[id]'
      views: never
    }
    'src/pages/federations/index.vue': {
      routes: '/federations/'
      views: never
    }
    'src/pages/receive.vue': {
      routes: '/receive'
      views: never
    }
    'src/pages/receive-ecash.vue': {
      routes: '/receive-ecash'
      views: never
    }
    'src/pages/received-lightning.vue': {
      routes: '/received-lightning'
      views: never
    }
    'src/pages/scan.vue': {
      routes: '/scan'
      views: never
    }
    'src/pages/send.vue': {
      routes: '/send'
      views: never
    }
    'src/pages/sent-lightning.vue': {
      routes: '/sent-lightning'
      views: never
    }
    'src/pages/settings/index.vue': {
      routes: '/settings/'
      views: never
    }
    'src/pages/transaction/[id].vue': {
      routes: '/transaction/[id]'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
