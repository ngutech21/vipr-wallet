# Derived from https://github.com/fedimint/fedimint-web-sdk (MIT License)

name: Setup Nix
description: Fast, cached Nix setup (flakes) for devimint + E2E tests

inputs:
  cachix-auth-token:
    description: Optional auth token to PUSH to fedimint Cachix (read-only pulls need none)
    required: false
  enable-fedimint-cache:
    description: 'Enable fedimint public Cachix cache (true/false)'
    default: 'true'
    required: false
  print-config:
    description: 'Print nix show-config for debugging (true/false)'
    default: 'false'
    required: false

runs:
  using: composite
  steps:
    - name: Install Nix (Determinate Systems)
      uses: DeterminateSystems/nix-installer-action@v12
      with:
        # flakes + nix-command are enabled by default; keep install lean
        extra-conf: |
          experimental-features = nix-command flakes
          # Reasonable timeouts to fail fast in CI
          connect-timeout = 15
          stalled-download-timeout = 15

    - name: Enable common binary caches (magic-nix-cache)
      uses: DeterminateSystems/magic-nix-cache-action@v6

    - name: Add fedimint Cachix (pull or push)
      if: inputs.enable-fedimint-cache == 'true'
      uses: cachix/cachix-action@v15
      with:
        name: fedimint
        authToken: ${{ inputs.cachix-auth-token }}
      # Even if push fails (no token) we still want read access
      continue-on-error: true

    - name: Show Nix config (optional)
      if: inputs.print-config == 'true'
      shell: bash
      run: |
        echo '--- nix show-config (filtered) ---'
        nix show-config | grep -E 'substituters|trusted-public-keys|experimental-features'
        echo '--- nix path-info devShell dry-run (if flake present) ---'
        if [ -f flake.nix ]; then
          nix build .#devShells.$(nix eval --raw --expr 'builtins.currentSystem').default --dry-run 2>&1 | sed -n '1,120p'
        fi

    - name: Summary
      shell: bash
      run: |
        echo "Nix setup complete." >> $GITHUB_STEP_SUMMARY
        echo "Fedimint cache: ${{ inputs.enable-fedimint-cache }}" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ inputs.cachix-auth-token }}" ]; then
          echo "Fedimint cache push: enabled (token provided)" >> $GITHUB_STEP_SUMMARY
        else
          echo "Fedimint cache push: not enabled (no token)" >> $GITHUB_STEP_SUMMARY
        fi
    
